"""implementando upload rescue flora

Revision ID: c6d7b221f5e3
Revises: 69f084f34077
Create Date: 2023-11-18 15:22:45.160871

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c6d7b221f5e3'
down_revision = '69f084f34077'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('habitat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_habitat_id'), 'habitat', ['id'], unique=False)
    op.create_table('site_release_mammals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_site_release_mammals_id'), 'site_release_mammals', ['id'], unique=False)
    op.create_table('rescue_mammals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cod', sa.String(length=50), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('mark', sa.String(length=50), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('altitude', sa.Integer(), nullable=False),
    sa.Column('gender', sa.Boolean(), nullable=True),
    sa.Column('LT', sa.Float(), nullable=True),
    sa.Column('LC', sa.Float(), nullable=True),
    sa.Column('LP', sa.Float(), nullable=True),
    sa.Column('LO', sa.Float(), nullable=True),
    sa.Column('LA', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('observation', sa.String(length=100), nullable=True),
    sa.Column('create_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('habitat_id', sa.Integer(), nullable=False),
    sa.Column('age_group_id', sa.Integer(), nullable=True),
    sa.Column('specie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['age_group_id'], ['age_group.id'], ),
    sa.ForeignKeyConstraint(['habitat_id'], ['habitat.id'], ),
    sa.ForeignKeyConstraint(['specie_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cod'),
    sa.UniqueConstraint('mark')
    )
    op.create_index(op.f('ix_rescue_mammals_id'), 'rescue_mammals', ['id'], unique=False)
    op.create_table('release_mammals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cod', sa.String(length=50), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('altitude', sa.Integer(), nullable=False),
    sa.Column('sustrate', sa.String(length=50), nullable=True),
    sa.Column('site_release_mammals_id', sa.Integer(), nullable=False),
    sa.Column('rescue_mammals_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rescue_mammals_id'], ['rescue_mammals.id'], ),
    sa.ForeignKeyConstraint(['site_release_mammals_id'], ['site_release_mammals.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cod')
    )
    op.create_index(op.f('ix_release_mammals_id'), 'release_mammals', ['id'], unique=False)
    op.alter_column('flora_relocation', 'relocation_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('flora_relocation', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('flora_relocation_zone', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.add_column('flora_rescue', sa.Column('genus_epiphyte_id', sa.Integer(), nullable=True))
    op.add_column('flora_rescue', sa.Column('family_epiphyte_id', sa.Integer(), nullable=True))
    op.alter_column('flora_rescue', 'epiphyte_number',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('flora_rescue', 'rescue_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('flora_rescue', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('flora_rescue', 'specie_epiphyte_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_flora_rescue_epiphyte_number', table_name='flora_rescue')
    op.create_index(op.f('ix_flora_rescue_epiphyte_number'), 'flora_rescue', ['epiphyte_number'], unique=True)
    op.create_foreign_key(None, 'flora_rescue', 'family', ['family_epiphyte_id'], ['id'])
    op.create_foreign_key(None, 'flora_rescue', 'genus', ['genus_epiphyte_id'], ['id'])
    op.alter_column('flora_rescue_zone', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('plant_nursery', 'entry_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('plant_nursery', 'flowering_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('plant_nursery', 'departure_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('plant_nursery', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('plant_nursery', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('plant_nursery', 'departure_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('plant_nursery', 'flowering_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('plant_nursery', 'entry_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('flora_rescue_zone', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_constraint(None, 'flora_rescue', type_='foreignkey')
    op.drop_constraint(None, 'flora_rescue', type_='foreignkey')
    op.drop_index(op.f('ix_flora_rescue_epiphyte_number'), table_name='flora_rescue')
    op.create_index('ix_flora_rescue_epiphyte_number', 'flora_rescue', ['epiphyte_number'], unique=False)
    op.alter_column('flora_rescue', 'specie_epiphyte_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('flora_rescue', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('flora_rescue', 'rescue_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('flora_rescue', 'epiphyte_number',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('flora_rescue', 'family_epiphyte_id')
    op.drop_column('flora_rescue', 'genus_epiphyte_id')
    op.alter_column('flora_relocation_zone', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('flora_relocation', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('flora_relocation', 'relocation_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_index(op.f('ix_release_mammals_id'), table_name='release_mammals')
    op.drop_table('release_mammals')
    op.drop_index(op.f('ix_rescue_mammals_id'), table_name='rescue_mammals')
    op.drop_table('rescue_mammals')
    op.drop_index(op.f('ix_site_release_mammals_id'), table_name='site_release_mammals')
    op.drop_table('site_release_mammals')
    op.drop_index(op.f('ix_habitat_id'), table_name='habitat')
    op.drop_table('habitat')
    # ### end Alembic commands ###
